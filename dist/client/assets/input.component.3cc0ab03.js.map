{"version":3,"file":"input.component.3cc0ab03.js","sources":["../../../node_modules/@spryker-oryx/ui/form/input/src/affix/affix.controller.js","../../../node_modules/@spryker-oryx/ui/form/input/src/error/error.controller.js","../../../node_modules/@spryker-oryx/ui/form/input/src/form-control/visible-focus.controller.js","../../../node_modules/@spryker-oryx/ui/form/input/src/form-control/form-control.controller.js","../../../node_modules/@spryker-oryx/ui/form/input/src/input.component.js"],"sourcesContent":["import { queryAssignedElements } from '@spryker-oryx/utilities/typescript';\nimport { html } from 'lit';\nexport class AffixController {\n    constructor(host) {\n        this.host = host;\n        this.host.addController(this);\n    }\n    hostUpdated() {\n        this.updateFill();\n    }\n    renderPrefix(content) {\n        if (!content) {\n            const icon = this.host.prefixIcon;\n            if (this.hasContent('prefix', icon)) {\n                content = html `<oryx-icon .type=\"${icon}\"></oryx-icon>`;\n                this.host.setAttribute('has-prefix', '');\n            }\n        }\n        else {\n            this.host.setAttribute('has-prefix', '');\n        }\n        return this.renderContent('prefix', content);\n    }\n    renderSuffix(content) {\n        let iconContent;\n        const icon = this.host.suffixIcon;\n        if (this.hasContent('suffix', icon)) {\n            iconContent = html `<oryx-icon .type=\"${icon}\"></oryx-icon>`;\n        }\n        return this.renderContent('suffix', html `${content}${iconContent}`);\n    }\n    renderContent(slotName, content) {\n        return html `<slot name=${slotName}>${content}</slot>`;\n    }\n    /**\n     * Updates the affix fill (prefix and suffix) whenever the affix content is provided.\n     * If there's no affix content available, the fill will not be added, regardless\n     * of the configured options.\n     */\n    updateFill() {\n        this.host.toggleAttribute('prefixFill', !!this.host.prefixFill &&\n            (!!this.host.prefixIcon ||\n                queryAssignedElements(this.host, { slot: 'prefix', flatten: true })\n                    ?.length > 0));\n        this.host.toggleAttribute('suffixFill', !!this.host.suffixFill &&\n            (!!this.host.suffixIcon ||\n                queryAssignedElements(this.host, { slot: 'suffix', flatten: true })\n                    ?.length > 0));\n    }\n    hasContent(slotName, icon) {\n        return (!!icon || this.host?.querySelectorAll?.(`*[slot=${slotName}]`)?.length > 0);\n    }\n}\n//# sourceMappingURL=affix.controller.js.map","import { html } from 'lit';\nexport class ErrorController {\n    constructor(host) {\n        this.host = host;\n        this.host.addController(this);\n    }\n    hostUpdated() {\n        this.handleError();\n    }\n    render() {\n        return html `<oryx-error-message .message=${this.message}>\n      <slot name=\"error\" @slotchange=${this.handleError.bind(this)}></slot>\n    </oryx-error-message>`;\n    }\n    handleError() {\n        const hasErrorContent = !!this.message || this.errorSlot.length > 0;\n        const errorMessage = this.host.shadowRoot.querySelector('oryx-error-message');\n        const hasErrorContentAttr = errorMessage?.hasAttribute('hasErrorContent');\n        errorMessage?.toggleAttribute('hasErrorContent', hasErrorContent);\n        if (!this.host.hasAttribute('hasError') || hasErrorContentAttr) {\n            this.host.toggleAttribute('hasError', hasErrorContent);\n        }\n    }\n    get message() {\n        return this.host.errorMessage;\n    }\n    get errorSlot() {\n        return this.host.querySelectorAll('[slot=error]');\n    }\n}\n//# sourceMappingURL=error.controller.js.map","import { queryAssignedElements } from '@spryker-oryx/utilities/typescript';\nconst focusableSelectors = [\n    'a[href]',\n    'button',\n    '[tabindex]',\n    'input',\n    'select',\n    'textarea',\n];\nexport class VisibleFocusController {\n    constructor(host) {\n        this.host = host;\n        this.host.addController(this);\n    }\n    hostConnected() {\n        this.setupVisibleFocusHandlers();\n    }\n    /**\n     * Manage the visible focus. While there's good browser support these days for\n     * visible focus, visible focus does not work in conjunction with `:focus-within`\n     * selectors. We therefore maintain a visible-focus attribute at the host.\n     */\n    setupVisibleFocusHandlers() {\n        const onBlur = () => {\n            this.mouseWasUsed = undefined;\n            this.host.removeAttribute('visible-focus');\n            this.focusableElements().forEach((el) => {\n                el.removeEventListener('blur', onBlur);\n            });\n        };\n        this.host.addEventListener('mousedown', () => {\n            this.mouseWasUsed = true;\n            this.host.removeAttribute('visible-focus');\n            this.focusableElements().forEach((el) => {\n                el.addEventListener('blur', () => onBlur());\n            });\n        });\n        this.host.addEventListener('keyup', () => {\n            if (!this.mouseWasUsed) {\n                this.host.toggleAttribute('visible-focus', true);\n            }\n            this.focusableElements().forEach((el) => {\n                el.addEventListener('blur', () => onBlur());\n            });\n        });\n    }\n    focusableElements() {\n        return queryAssignedElements(this.host, {\n            selector: focusableSelectors.join(','),\n            flatten: true,\n        });\n    }\n}\n//# sourceMappingURL=visible-focus.controller.js.map","import { isFocusable } from '@spryker-oryx/utilities/typescript';\nimport { html } from 'lit';\nimport { getControl } from '../../../utilities/getControl';\nimport { ErrorController } from '../error/error.controller';\nimport { VisibleFocusController } from './visible-focus.controller';\nexport class FormControlController {\n    constructor(host) {\n        this.host = host;\n        this._attributes = ['disabled', 'readonly'];\n        this._listeners = [];\n        this.host.addController(this);\n        this.visibleFocusController = new VisibleFocusController(this.host);\n        this.errorController = new ErrorController(this.host);\n        this.mouseDownHandler = this.mouseDownHandler.bind(this);\n        this.setHasErrorAttr = this.setHasErrorAttr.bind(this);\n        this.removeHasErrorAttr = this.removeHasErrorAttr.bind(this);\n    }\n    hostConnected() {\n        this.host.addEventListener('mousedown', this.mouseDownHandler);\n    }\n    hostUpdated() {\n        const prefix = this.host.renderRoot.querySelector('slot[name=\"prefix\"]');\n        this.host.style.setProperty('--float-label-start-gap', `${prefix?.offsetWidth}px`);\n    }\n    hostDisconnected() {\n        this.removeValidationListeners();\n        this.host.removeEventListener('mousedown', this.mouseDownHandler);\n        this.controlAttrObserver?.disconnect();\n    }\n    mouseDownHandler(e) {\n        // we do not focus the control in case another (custom) focusable\n        // element is used inside the form control (ie inside prefix)\n        if (!isFocusable(e.target)) {\n            if (e.target === this.host) {\n                e.preventDefault();\n            }\n            this.control.focus();\n        }\n    }\n    render(content = {}) {\n        return html `\n      <label>\n        <slot name=\"label\" part=\"label\">${this.host.label}</slot>\n        <div class=\"control\">\n          ${content.before}\n          <slot\n            @slotchange=${() => this.handleSlotChange()}\n            @input=${() => this.toggleHasValueAttribute()}\n          >\n            <input />\n          </slot>\n          ${content.after}\n        </div>\n      </label>\n      ${this.errorController.render()}\n    `;\n    }\n    handleSlotChange() {\n        this.detectAutofill();\n        this.toggleHasValueAttribute();\n        this.adjustDisabledState();\n        this.addValidationListeners();\n    }\n    setHasErrorAttr() {\n        this.host.toggleAttribute('hasError', true);\n    }\n    removeHasErrorAttr() {\n        this.host.toggleAttribute('hasError', false);\n    }\n    addValidationListeners() {\n        this.control?.addEventListener('invalid', this.setHasErrorAttr);\n        this.control?.addEventListener('input', this.removeHasErrorAttr);\n    }\n    removeValidationListeners() {\n        this.control?.removeEventListener('invalid', this.setHasErrorAttr);\n        this.control?.removeEventListener('input', this.removeHasErrorAttr);\n    }\n    detectAutofill() {\n        let timesToTry = 30;\n        const interval = setInterval(() => {\n            if (timesToTry === 0) {\n                clearInterval(interval);\n            }\n            timesToTry--;\n            // try catch is needed here to avoid JSDOM tests error\n            try {\n                if (this.control.matches(':-webkit-autofill')) {\n                    this.host.toggleAttribute('has-value', true);\n                    clearInterval(interval);\n                }\n            }\n            catch (e) {\n                clearInterval(interval);\n            }\n        }, 30);\n    }\n    toggleHasValueAttribute() {\n        this.host.toggleAttribute('has-value', !!this.control.value);\n    }\n    adjustDisabledState() {\n        this.host.toggleAttribute('disabled', this.control.disabled);\n        this.registerListener({ attributes: ['disabled', 'readonly'] }, () => {\n            this.host.toggleAttribute('disabled', this.control.disabled);\n        });\n    }\n    registerListener(mutation, callback) {\n        this._attributes = [...this._attributes, ...mutation.attributes];\n        this._listeners.push(callback);\n        this.controlAttrObserver?.disconnect();\n        this.controlAttrObserver = new MutationObserver((mutations, observer) => {\n            this._listeners.forEach((listener) => listener(mutations, observer));\n        });\n        this.controlAttrObserver.observe(this.control, {\n            attributeFilter: this._attributes,\n        });\n    }\n    get control() {\n        return getControl(this.host);\n    }\n}\n//# sourceMappingURL=form-control.controller.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { AffixController } from './affix';\nimport { FormControlController } from './form-control';\nimport { baseStyles } from './input.styles';\nexport class InputComponent extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.formControlController = new FormControlController(this);\n        this.affixController = new AffixController(this);\n    }\n    render() {\n        return html `${this.formControlController.render({\n            before: this.affixController.renderPrefix(),\n            after: this.affixController.renderSuffix(),\n        })}`;\n    }\n}\nInputComponent.styles = baseStyles;\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    __metadata(\"design:type\", Boolean)\n], InputComponent.prototype, \"floatLabel\", void 0);\n__decorate([\n    property(),\n    __metadata(\"design:type\", String)\n], InputComponent.prototype, \"label\", void 0);\n__decorate([\n    property(),\n    __metadata(\"design:type\", String)\n], InputComponent.prototype, \"errorMessage\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    __metadata(\"design:type\", Boolean)\n], InputComponent.prototype, \"hasError\", void 0);\n__decorate([\n    property(),\n    __metadata(\"design:type\", String)\n], InputComponent.prototype, \"prefixIcon\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    __metadata(\"design:type\", Boolean)\n], InputComponent.prototype, \"prefixFill\", void 0);\n__decorate([\n    property(),\n    __metadata(\"design:type\", String)\n], InputComponent.prototype, \"suffixIcon\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    __metadata(\"design:type\", Boolean)\n], InputComponent.prototype, \"suffixFill\", void 0);\n//# sourceMappingURL=input.component.js.map"],"names":["AffixController","host","content","icon","html","iconContent","slotName","_a","queryAssignedElements","_b","_c","ErrorController","hasErrorContent","errorMessage","hasErrorContentAttr","focusableSelectors","VisibleFocusController","onBlur","el","FormControlController","prefix","e","isFocusable","timesToTry","interval","mutation","callback","mutations","observer","listener","getControl","InputComponent","LitElement","baseStyles","__decorate","property","__metadata"],"mappings":"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"}