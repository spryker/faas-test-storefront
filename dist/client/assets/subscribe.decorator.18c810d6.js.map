{"version":3,"file":"subscribe.decorator.18c810d6.js","sources":["../../../node_modules/@spryker-oryx/utilities/lit-rxjs/src/decorators/subscribe/subscribe.controller.js","../../../node_modules/@spryker-oryx/utilities/lit-rxjs/src/decorators/subscribe/subscribe.decorator.js"],"sourcesContent":["import { resolve } from '@spryker-oryx/injector';\nimport { isObservable, Subscription } from 'rxjs';\nexport class SubscribeController {\n    constructor(host) {\n        this.host = host;\n        this.subscriptions = new Subscription();\n        this.observables = new Map();\n        // TODO: temporary solution should be solved with proper hook provided from lit\n        this.context = resolve('FES.ContextService', null);\n        (this.host = host).addController(this);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.context?.rendered$?.subscribe?.(() => this.unsubscribe());\n    }\n    hostConnected() {\n        for (const observable$ of this.observables.keys()) {\n            this.subscribe(observable$);\n        }\n    }\n    hostDisconnected() {\n        this.unsubscribe();\n    }\n    add(observable$, key) {\n        if (this.observables.has(key)) {\n            return;\n        }\n        if (!isObservable(observable$)) {\n            throw `Invalid SubscribeController value: incorrect ${observable$} for SubscribeController, use observable`;\n        }\n        this.observables.set(key, {\n            observable$,\n            subscription: null,\n        });\n    }\n    subscribe(key) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this.observables.get(key);\n        if (data?.subscription) {\n            return;\n        }\n        data.subscription = data.observable$.subscribe();\n    }\n    unsubscribe() {\n        for (const observable$ of this.observables.values()) {\n            if (observable$.subscription) {\n                observable$.subscription.unsubscribe();\n                observable$.subscription = null;\n            }\n        }\n    }\n}\n//# sourceMappingURL=subscribe.controller.js.map","import { SubscribeController } from './subscribe.controller';\nconst SUBSCRIBE_CONTROLLER = Symbol('subscribeController');\nfunction controllerCreation(target) {\n    if (!target[SUBSCRIBE_CONTROLLER]) {\n        const descriptor = {\n            value: new SubscribeController(target),\n            enumerable: false,\n            configurable: true,\n        };\n        Object.defineProperty(target, SUBSCRIBE_CONTROLLER, descriptor);\n    }\n}\nconst legacySubscribe = (context, name) => {\n    const constructor = context.constructor;\n    const internalKey = Symbol(name);\n    const willUpdate = context['willUpdate'];\n    Object.defineProperty(context, name, {\n        get: function () {\n            return this[internalKey];\n        },\n        set: function (observable$) {\n            if (!this[internalKey]) {\n                this[SUBSCRIBE_CONTROLLER].add(observable$, name);\n            }\n            this[internalKey] = observable$;\n        },\n        configurable: true,\n    });\n    context['willUpdate'] = function (props) {\n        this[SUBSCRIBE_CONTROLLER].hostConnected();\n        willUpdate.call(this, props);\n    };\n    constructor.addInitializer((instance) => {\n        controllerCreation(instance);\n    });\n};\nconst standardSubscribe = (context, name) => {\n    return {\n        ...context,\n        initializer() {\n            const observable$ = context.initializer?.call(this);\n            controllerCreation(this);\n            this[SUBSCRIBE_CONTROLLER].add(observable$, name);\n            return observable$;\n        },\n    };\n};\n/**\n * Marking a class property with `@subscribe` will create subscription of decorated observable on connectedCallback and unsubscribe\n * of that property on disconnectedCallback\n *\n * Example\n * export class Component extends LitElement {\n *  @subscribe()\n *  prop = from([1, 2, 3, 4]).pipe(// implementation //);\n * }\n *\n * NOTE: This decorator should be used only with LitElement (or mixing) and will not work properly, when used inside other classes\n * like controllers or services.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function subscribe() {\n    return (context, name) => {\n        const isLegacy = (context, name) => {\n            return name !== undefined;\n        };\n        const propName = (isLegacy(context, name) ? name : context.key);\n        return isLegacy(context, name)\n            ? legacySubscribe(context, propName)\n            : standardSubscribe(context, propName);\n    };\n}\n//# sourceMappingURL=subscribe.decorator.js.map"],"names":["SubscribeController","host","Subscription","resolve","_c","_b","_a","observable$","key","isObservable","data","SUBSCRIBE_CONTROLLER","controllerCreation","target","descriptor","legacySubscribe","context","name","constructor","internalKey","willUpdate","props","instance","standardSubscribe","subscribe","isLegacy","propName"],"mappings":"sDAEO,MAAMA,CAAoB,CAC7B,YAAYC,EAAM,WACd,KAAK,KAAOA,EACZ,KAAK,cAAgB,IAAIC,EACzB,KAAK,YAAc,IAAI,IAEvB,KAAK,QAAUC,EAAQ,qBAAsB,IAAI,GAChD,KAAK,KAAOF,GAAM,cAAc,IAAI,GAErCG,GAAAC,GAAAC,EAAA,KAAK,UAAL,YAAAA,EAAc,YAAd,YAAAD,EAAyB,YAAzB,MAAAD,EAAA,KAAAC,EAAqC,IAAM,KAAK,YAAW,EAC9D,CACD,eAAgB,CACZ,UAAWE,KAAe,KAAK,YAAY,KAAI,EAC3C,KAAK,UAAUA,CAAW,CAEjC,CACD,kBAAmB,CACf,KAAK,YAAW,CACnB,CACD,IAAIA,EAAaC,EAAK,CAClB,GAAI,MAAK,YAAY,IAAIA,CAAG,EAG5B,IAAI,CAACC,EAAaF,CAAW,EACzB,KAAM,gDAAgDA,4CAE1D,KAAK,YAAY,IAAIC,EAAK,CACtB,YAAAD,EACA,aAAc,IAC1B,CAAS,EACJ,CACD,UAAUC,EAAK,CAEX,MAAME,EAAO,KAAK,YAAY,IAAIF,CAAG,EACjCE,GAAA,MAAAA,EAAM,eAGVA,EAAK,aAAeA,EAAK,YAAY,UAAS,EACjD,CACD,aAAc,CACV,UAAWH,KAAe,KAAK,YAAY,OAAM,EACzCA,EAAY,eACZA,EAAY,aAAa,cACzBA,EAAY,aAAe,KAGtC,CACL,CChDA,MAAMI,EAAuB,OAAO,qBAAqB,EACzD,SAASC,EAAmBC,EAAQ,CAChC,GAAI,CAACA,EAAOF,GAAuB,CAC/B,MAAMG,EAAa,CACf,MAAO,IAAId,EAAoBa,CAAM,EACrC,WAAY,GACZ,aAAc,EAC1B,EACQ,OAAO,eAAeA,EAAQF,EAAsBG,CAAU,CACjE,CACL,CACA,MAAMC,EAAkB,CAACC,EAASC,IAAS,CACvC,MAAMC,EAAcF,EAAQ,YACtBG,EAAc,OAAOF,CAAI,EACzBG,EAAaJ,EAAQ,WAC3B,OAAO,eAAeA,EAASC,EAAM,CACjC,IAAK,UAAY,CACb,OAAO,KAAKE,EACf,EACD,IAAK,SAAUZ,EAAa,CACnB,KAAKY,IACN,KAAKR,GAAsB,IAAIJ,EAAaU,CAAI,EAEpD,KAAKE,GAAeZ,CACvB,EACD,aAAc,EACtB,CAAK,EACDS,EAAQ,WAAgB,SAAUK,EAAO,CACrC,KAAKV,GAAsB,gBAC3BS,EAAW,KAAK,KAAMC,CAAK,CACnC,EACIH,EAAY,eAAgBI,GAAa,CACrCV,EAAmBU,CAAQ,CACnC,CAAK,CACL,EACMC,EAAoB,CAACP,EAASC,KACzB,CACH,GAAGD,EACH,aAAc,OACV,MAAMT,GAAcD,EAAAU,EAAQ,cAAR,YAAAV,EAAqB,KAAK,MAC9C,OAAAM,EAAmB,IAAI,EACvB,KAAKD,GAAsB,IAAIJ,EAAaU,CAAI,EACzCV,CACV,CACT,GAgBO,SAASiB,GAAY,CACxB,MAAO,CAACR,EAASC,IAAS,CACtB,MAAMQ,EAAW,CAACT,EAASC,IAChBA,IAAS,OAEdS,EAAYD,EAAST,EAASC,CAAI,EAAIA,EAAOD,EAAQ,IAC3D,OAAOS,EAAST,EAASC,CAAI,EACvBF,EAAgBC,EAASU,CAAQ,EACjCH,EAAkBP,EAASU,CAAQ,CACjD,CACA"}