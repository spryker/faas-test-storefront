{"version":3,"file":"images.component.37a33a38.js","sources":["../../../node_modules/@spryker-oryx/product/images/src/styles/constants.js","../../../node_modules/@spryker-oryx/product/images/src/styles/images-main.styles.js","../../../node_modules/@spryker-oryx/product/images/src/styles/images-navigation.styles.js","../../../node_modules/@spryker-oryx/product/images/src/styles/images.styles.js","../../../node_modules/@spryker-oryx/product/images/src/images.component.js"],"sourcesContent":["import { css, unsafeCSS } from 'lit';\nexport const hasNoMain = unsafeCSS(`[main-layout='${\"none\" /* PIPL.None */}']`);\nexport const isMainToggle = unsafeCSS(`[main-layout='${\"toggle\" /* PIPL.Toggle */}']`);\nexport const isPosBottom = unsafeCSS(`[nav-position='${\"bottom\" /* PINP.Bottom */}']`);\nexport const isPosTop = unsafeCSS(`[nav-position='${\"top\" /* PINP.Top */}']`);\nexport const isPosStart = unsafeCSS(`[nav-position='${\"start\" /* PINP.Start */}']`);\nexport const isPosEnd = unsafeCSS(`[nav-position='${\"end\" /* PINP.End */}']`);\nexport const isPosStartOrEnd = unsafeCSS(`:is(${isPosStart}, ${isPosEnd})`);\nexport const isGrid = unsafeCSS(`[nav-layout='${\"grid\" /* PINL.Grid */}']`);\nexport const isFloating = unsafeCSS(`[nav-display='${\"floating\" /* PIND.Floating */}']`);\nexport const isDisplayNone = unsafeCSS(`[nav-display='${\"none\" /* PIND.None */}']`);\nexport const isNavAlignCenter = unsafeCSS(`[nav-align='${\"center\" /* PINA.Center */}']`);\nexport const isNavAlignEnd = unsafeCSS(`[nav-align='${\"end\" /* PINA.End */}']`);\nexport const mainHeight = css `var(--product-images-main-height, 300px)`;\nexport const thumbWidth = css `var(--product-images-thumb-width, var(--product-images-thumb-height, min(15vw, 80px)))`;\nexport const thumbHeight = css `var(--product-images-thumb-height, var(--product-images-thumb-width, min(15vw, 80px)))`;\n//# sourceMappingURL=constants.js.map","import { css } from 'lit';\nimport { isMainToggle, mainHeight } from './constants';\nexport const mainImageStyles = css `\n  section {\n    position: relative;\n    height: ${mainHeight};\n    width: var(--product-images-main-width, 100%);\n  }\n\n  section product-media {\n    box-sizing: border-box;\n    min-height: 1px;\n  }\n\n  slot:not(${isMainToggle}) section {\n    display: flex;\n    flex-grow: 1;\n    scrollbar-width: none;\n    overflow-x: auto;\n    overflow-y: hidden;\n    scroll-snap-type: x mandatory;\n    -webkit-overflow-scrolling: touch;\n  }\n\n  slot:not(${isMainToggle}) section product-media {\n    flex: 1 0 100%;\n    scroll-snap-align: start;\n  }\n\n  slot${isMainToggle} section product-media {\n    position: absolute;\n    inset: 0;\n    opacity: 0;\n    transition: opacity var(--oryx-transition-time) ease;\n  }\n\n  slot${isMainToggle} section product-media[active] {\n    opacity: 1;\n  }\n`;\n//# sourceMappingURL=images-main.styles.js.map","import { css } from 'lit';\nimport { hasNoMain, isFloating, isGrid, isNavAlignCenter, isNavAlignEnd, isPosBottom, isPosEnd, isPosStart, isPosStartOrEnd, mainHeight, thumbHeight, thumbWidth, } from './constants';\nconst carouselNavigation = css `\n  :not(${isGrid}) .nav {\n    min-width: 0;\n    overflow: auto;\n    scroll-behavior: smooth;\n  }\n\n  :not(${isGrid}):not(${isPosStartOrEnd}) .nav {\n    overscroll-behavior-x: contain;\n    scroll-snap-type: x mandatory;\n  }\n\n  :not(${isGrid})${isPosStartOrEnd} .nav {\n    overscroll-behavior-y: contain;\n    scroll-snap-type: y mandatory;\n  }\n\n  slot${isPosStartOrEnd}:not(${isGrid}) .nav {\n    height: inherit;\n  }\n`;\nconst gridNavigation = css `\n  slot:not(${isPosStartOrEnd})${isGrid} .nav {\n    flex-wrap: wrap;\n  }\n\n  slot${isGrid} {\n    align-items: start;\n  }\n\n  slot${isPosStartOrEnd}${isGrid} .nav {\n    display: grid;\n    grid-template-rows: repeat(var(--oryx-grid-items-per-column, 3), 1fr);\n    grid-auto-flow: column;\n    min-width: 0;\n  }\n`;\n/**\n * Floating navigations are not based on a grid layout, and force the navigation\n * to float on top of the main image.\n */\nconst floatingNavigation = css `\n  slot${isFloating} {\n    overflow: hidden;\n  }\n\n  slot${isFloating}:not(${hasNoMain}) .nav {\n    position: absolute;\n    z-index: 1;\n  }\n\n  slot${isFloating}:not(${isPosStartOrEnd}) .nav {\n    width: inherit;\n  }\n\n  slot${isFloating}${isPosEnd} .nav {\n    inset-inline-end: 0;\n  }\n\n  slot${isFloating}:not([nav-position]) .nav,\n  slot${isFloating}${isPosBottom} .nav {\n    bottom: 0;\n  }\n`;\n/**\n * The navigation can be aligned in 3 directions: start, center and end. The alignment\n * is either on the horizontal or vertical axes, depending on the top/bottom or start/end\n * position.\n */\nconst navigationAlignment = css `\n  slot:not(${isGrid}):not(${isPosStartOrEnd}):not([nav-align])\n    label:first-child,\n  slot:not(${isGrid}):not(${isPosStartOrEnd}):is(${isNavAlignCenter},\n      ${isNavAlignEnd})\n    label:first-child {\n    margin-inline-start: auto;\n  }\n\n  slot:not(${isGrid}):not(${isPosStartOrEnd}):not([nav-align]) label:last-child,\n  slot:not(${isGrid}):not(${isPosStartOrEnd})${isNavAlignCenter}\n    label:last-child {\n    margin-inline-end: auto;\n  }\n\n  slot:not(${isGrid})${isPosStartOrEnd}:is(${isNavAlignCenter}, ${isNavAlignEnd})\n    label:first-child {\n    margin-block-start: auto;\n  }\n\n  slot:not(${isGrid})${isPosStartOrEnd}${isNavAlignCenter} label:last-child {\n    margin-block-end: auto;\n  }\n\n  slot${isGrid}:not([nav-align]) .nav,\n  slot${isGrid}${isNavAlignCenter} .nav {\n    justify-content: center;\n  }\n\n  slot${isPosStartOrEnd}${isGrid}:not([nav-align]) .nav,\n  slot${isPosStartOrEnd}${isGrid}${isNavAlignCenter} .nav {\n    align-self: center;\n  }\n\n  slot${isGrid}${isNavAlignEnd} .nav {\n    justify-content: end;\n    align-self: end;\n  }\n`;\nexport const navigationStyles = css `\n  .nav {\n    display: flex;\n    align-items: center;\n    align-content: start;\n    gap: var(--product-images-navigation-gap, var(--oryx-space-2));\n    border: none;\n    margin: 0;\n    box-sizing: border-box;\n    padding: 4px;\n  }\n\n  slot${isPosStartOrEnd} .nav {\n    flex-direction: column;\n    box-sizing: border-box;\n  }\n\n  slot${isPosStart}, slot${isPosEnd} {\n    height: ${mainHeight};\n  }\n\n  ${carouselNavigation}\n  ${gridNavigation}\n  ${floatingNavigation}\n  ${navigationAlignment}\n\n  .nav label {\n    position: relative;\n    scroll-snap-align: start;\n    height: ${thumbHeight};\n    width: ${thumbWidth};\n    padding: 10px;\n    box-sizing: border-box;\n    background-color: var(--oryx-color-canvas-100);\n  }\n\n  slot${isPosStartOrEnd} .nav label {\n    flex: 0 0 ${thumbHeight};\n  }\n\n  slot:not(${isPosStartOrEnd}) .nav label {\n    flex: 0 0 ${thumbWidth};\n  }\n\n  .nav input {\n    appearance: none;\n    margin: 0;\n    inset: 0;\n    cursor: pointer;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    outline: none;\n    border-radius: 2px;\n  }\n\n  .nav input:focus:focus-visible,\n  .nav input:checked,\n  .nav input:hover {\n    border: solid var(--oryx-border-thin) var(--oryx-color-neutral-400);\n  }\n\n  .nav input:hover:not(:checked) {\n    border-color: var(--oryx-color-neutral-200);\n  }\n\n  .nav input:focus:focus-visible {\n    box-shadow: 0 0 4px var(--oryx-color-focus);\n    border-color: var(--oryx-color-focus);\n  }\n`;\n//# sourceMappingURL=images-navigation.styles.js.map","import { css } from 'lit';\nimport { hasNoMain, isDisplayNone, isFloating, isPosBottom, isPosEnd, isPosStart, isPosTop, mainHeight, } from './constants';\nimport { mainImageStyles } from './images-main.styles';\nimport { navigationStyles } from './images-navigation.styles';\n/**\n * The layout for the main image and thumbnail navigation is driven by a grid system.\n * The grid rows and columns depend on the dynamic component definition, since the\n * navigation can be put on the top, bottom, start or end.\n *\n * The grid system allows us to render the layout properly in both ltr and rtl direction.\n *\n * When there's no navigation or main image to be rendered, we neutralise the grid system\n * by using a single row/column.\n */\nconst hostLayout = css `\n  :host {\n    width: 100%;\n  }\n\n  slot {\n    display: grid;\n    gap: var(--oryx-layout-gap);\n    width: var(--product-images-main-width, 100%);\n    position: relative;\n  }\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  slot:not([nav-position]),\n  slot${isPosBottom} {\n    grid-template-rows: ${mainHeight} min-content;\n  }\n\n  slot${isPosTop} {\n    grid-template-rows: min-content ${mainHeight};\n  }\n\n  slot${isPosStart} {\n    grid-template-columns: min-content var(--product-images-main-width, 1fr);\n  }\n\n  slot${isPosEnd} {\n    grid-template-columns: var(--product-images-main-width, 1fr) min-content;\n  }\n\n  slot[without-nav],\n  slot${hasNoMain}, slot${isFloating}, slot${isDisplayNone} {\n    grid-template-rows: 1fr;\n    grid-template-columns: 1fr;\n  }\n`;\nexport const styles = css `\n  ${hostLayout}\n  ${mainImageStyles}\n  ${navigationStyles}\n`;\n//# sourceMappingURL=images.styles.js.map","import { __decorate } from \"tslib\";\nimport { ContentController } from '@spryker-oryx/experience';\nimport { ProductComponentMixin, ProductController, } from '@spryker-oryx/product';\nimport { hydratable } from '@spryker-oryx/utilities';\nimport { asyncValue } from '@spryker-oryx/utilities/lit-rxjs';\nimport { html } from 'lit';\nimport { when } from 'lit-html/directives/when.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { BehaviorSubject, combineLatest, tap } from 'rxjs';\nimport { styles } from './styles';\nlet ProductImagesComponent = class ProductImagesComponent extends ProductComponentMixin() {\n    constructor() {\n        super(...arguments);\n        this.product$ = new ProductController(this)\n            .getProduct()\n            .pipe((product) => this.reset(product));\n        this.options$ = new ContentController(this)\n            .getOptions()\n            .pipe((options) => this.reset(options));\n        this.active$ = new BehaviorSubject(0);\n    }\n    render() {\n        return html `\n      ${asyncValue(combineLatest([this.product$, this.options$, this.active$]), ([product, options, active]) => {\n            const media = this.resolveImages(product, options);\n            return this.wrap(options, this.renderMain(options, media, active), this.renderNavigation(options, media, active));\n        })}\n    `;\n    }\n    resolveImages(product, options) {\n        const set = !options.mediaSet\n            ? product?.mediaSet?.[0]\n            : product?.mediaSet?.find((set) => set.name === options.mediaSet);\n        return set?.media ?? [];\n    }\n    /**\n     * Wrapper element that reflects layout options. The DOM order of the main\n     * image and the navigation are _adapted_ based on the configured layout.\n     * The order of the preview and navigation as well as the reflected options\n     * are crucial for proper styling.\n     *\n     * We cannot set those on the host element, since there's no support for `style.setAttribute`\n     * and `toggleAttribute` on the host in lit ssr.\n     */\n    wrap(options, main, navigation) {\n        const cssVar = (prop, value) => value ? `${prop}:${value}${isNaN(value) ? '' : 'px'};` : '';\n        let style = '';\n        style += cssVar('--product-images-main-height', options.mainImageHeight);\n        style += cssVar('--product-images-main-width', options.mainImageWidth);\n        style += cssVar('--product-images-thumb-height', options.thumbHeight);\n        style += cssVar('--product-images-thumb-width', options.thumbWidth);\n        if (options.gridItemsPerColumn) {\n            style += `--oryx-grid-items-per-column: ${options.gridItemsPerColumn}`;\n        }\n        return html ` <slot\n      main-layout=${ifDefined(options.mainLayout)}\n      nav-position=${ifDefined(options.navigationPosition)}\n      nav-layout=${ifDefined(options.navigationLayout)}\n      nav-display=${ifDefined(options.navigationDisplay)}\n      nav-align=${ifDefined(options.navigationAlignment)}\n      ?without-nav=${!navigation.values.length}\n      style=${style}\n    >\n      ${when(options.navigationPosition === \"top\" /* ProductImagesNavigationPosition.Top */ ||\n            options.navigationPosition === \"start\" /* ProductImagesNavigationPosition.Start */, () => html `${navigation}${main}`, () => html `${main}${navigation}`)}\n    </slot>`;\n    }\n    /**\n     * Renders the main product image, aka the preview image.\n     *\n     * The preview image can be toggled when there are multiple images\n     * available, using the image navigation.\n     *\n     * An empty image is returned when the `previewLayout` is `none`.\n     */\n    renderMain(options, images, active) {\n        if (options.mainLayout === \"none\" /* ProductImagesMainLayout.None */) {\n            return html ``;\n        }\n        return html `<section class=\"preview\">\n      ${images.map((_, i) => html `<product-media\n          .sku=${this.sku}\n          .options=${{\n            mediaIndex: i,\n            containerSize: \"detail\" /* ProductMediaContainerSize.Detail */,\n            alt: `preview${i + 1}`,\n            loading: active !== i ? 'lazy' : undefined,\n        }}\n          ?active=${active === i}\n        ></product-media>`)}\n    </section>`;\n    }\n    /**\n     * Renders an navigation with image thumbnails.\n     *\n     * An empty template is returned when the `navigationDisplay` is `none`\n     * or when there is only a single image available.\n     */\n    renderNavigation(options, images, active) {\n        if (options.navigationDisplay === \"none\" /* ProductImagesNavigationDisplay.None */ ||\n            images.length <= 1) {\n            return html ``;\n        }\n        return html ` <fieldset class=\"nav\">\n      ${images.map((image, i) => html `\n          <label aria-label=${`image ${i}`}>\n            <input\n              value=${i}\n              type=\"radio\"\n              name=${ifDefined(options.groupName ?? `product-image-nav-${this.uid}`)}\n              ?checked=${i === active}\n              @input=${this.onInput}\n              @mouseover=${(e) => this.onMouseover(e, options)}\n            />\n            <product-media\n              .sku=${this.sku}\n              .options=${{\n            mediaIndex: i,\n            containerSize: \"thumbnail\" /* ProductMediaContainerSize.Thumbnail */,\n            loading: active !== i ? 'lazy' : undefined,\n        }}\n              ?active=${active === i}\n            ></product-media>\n          </label>\n        `)}\n    </fieldset>`;\n    }\n    onInput(e) {\n        const target = e.target;\n        const active = target.value;\n        this.setActive(+active, \"smooth\" /* ProductImagesScrollBehavior.Smooth */);\n    }\n    onMouseover(e, options) {\n        if (options.navigationMouseEvent ===\n            \"mouseover\" /* ProductImagesNavigationMouseEvent.Mouseover */) {\n            e.target.dispatchEvent(new InputEvent('input', { bubbles: true, composed: true }));\n        }\n    }\n    /**\n     * Toggles the active navigation thumbnail and navigates to the\n     * active preview image.\n     *\n     * When a `smooth` or `auto` behaviour is provided, the preview image\n     * is scrolled into view using this behaviour.\n     */\n    setActive(active, behavior = \"auto\" /* ProductImagesScrollBehavior.Auto */) {\n        if (active !== undefined) {\n            this.active$.next(active);\n            const navItems = this.shadowRoot?.querySelectorAll('input');\n            navItems?.[active]?.toggleAttribute('checked', true);\n        }\n        const item = this.shadowRoot?.querySelectorAll('section product-media')?.[this.active$.getValue()];\n        if (behavior === \"disable\" /* ProductImagesScrollBehavior.Disable */) {\n            item?.parentNode?.scrollTo(0, 0);\n        }\n        else {\n            item?.parentNode?.scroll({\n                left: item?.offsetLeft,\n                behavior,\n            });\n        }\n    }\n    /**\n     * Resets the thumbnail navigation. This is useful when the image data\n     * is change (i.e. during page navigation) or when the options are changing.\n     */\n    reset(source$) {\n        return source$.pipe(tap(() => this.setActive(0, \"disable\" /* ProductImagesScrollBehavior.Disable */)));\n    }\n};\nProductImagesComponent.styles = styles;\nProductImagesComponent = __decorate([\n    hydratable('mouseover')\n], ProductImagesComponent);\nexport { ProductImagesComponent };\n//# sourceMappingURL=images.component.js.map"],"names":["hasNoMain","unsafeCSS","isMainToggle","isPosBottom","isPosTop","isPosStart","isPosEnd","isPosStartOrEnd","isGrid","isFloating","isDisplayNone","isNavAlignCenter","isNavAlignEnd","mainHeight","css","thumbWidth","thumbHeight","mainImageStyles","carouselNavigation","gridNavigation","floatingNavigation","navigationAlignment","navigationStyles","hostLayout","styles","ProductImagesComponent","ProductComponentMixin","ProductController","product","ContentController","options","BehaviorSubject","html","asyncValue","combineLatest","active","media","set","_b","_a","_c","main","navigation","cssVar","prop","value","style","ifDefined","when","images","_","i","image","e","behavior","navItems","item","_d","_e","_f","source$","tap","__decorate","hydratable"],"mappings":"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"}