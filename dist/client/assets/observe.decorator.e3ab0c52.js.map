{"version":3,"file":"observe.decorator.e3ab0c52.js","sources":["../../../node_modules/@spryker-oryx/utilities/lit-rxjs/src/decorators/observe/observe.decorator.js"],"sourcesContent":["const throwSubjectError = (subject$) => {\n    if (subject$ && !subject$.next) {\n        throw `Invalid observe value: incorrect ${subject$} for observe decorator, please use rxjs subjects`;\n    }\n};\nconst getReactiveDescriptor = (proto, propertyKey) => {\n    const ownDescriptor = Object.getOwnPropertyDescriptor(proto, propertyKey);\n    if (!ownDescriptor) {\n        throw `Invalid observed property name: incorrect ${propertyKey} for observe decorator, please use already created reactive property name as an element to observe`;\n    }\n    return ownDescriptor;\n};\nconst legacyObserve = (proto, subjectKey, propertyKey) => {\n    const reactiveDescriptor = getReactiveDescriptor(proto, propertyKey);\n    const internalSubjectKey = Symbol(subjectKey);\n    const propertyDescriptor = {\n        ...reactiveDescriptor,\n        set(newValue) {\n            reactiveDescriptor.set?.call(this, newValue);\n            if (this[internalSubjectKey]) {\n                this[internalSubjectKey].next(newValue);\n            }\n        },\n    };\n    const subjectDescriptor = {\n        get() {\n            return this[internalSubjectKey];\n        },\n        set(value$) {\n            throwSubjectError(value$);\n            const descriptor = {\n                value: value$,\n                enumerable: false,\n                configurable: true,\n            };\n            Object.defineProperty(this, internalSubjectKey, descriptor);\n        },\n        enumerable: false,\n        configurable: true,\n    };\n    Object.defineProperty(proto, subjectKey, subjectDescriptor);\n    Object.defineProperty(proto, propertyKey, propertyDescriptor);\n};\nconst standardObserve = (context, subjectKey, propertyKey) => {\n    return {\n        ...context,\n        initializer() {\n            const subject$ = context.initializer?.call(this);\n            throwSubjectError(subject$);\n            subject$.next(this[propertyKey]);\n            return subject$;\n        },\n        finisher(clazz) {\n            const proto = clazz.prototype;\n            const reactiveDescriptor = getReactiveDescriptor(proto, propertyKey);\n            const propertyDescriptor = {\n                ...reactiveDescriptor,\n                set(newValue) {\n                    reactiveDescriptor.set?.call(this, newValue);\n                    if (this[subjectKey]) {\n                        this[subjectKey].next(newValue);\n                    }\n                },\n            };\n            Object.defineProperty(proto, propertyKey, propertyDescriptor);\n        },\n    };\n};\n/**\n * Marking a class property with `@observe` will generate a hidden Subject (BehaviorSubject by default), and modify the getters and setters\n *  of that property to update/take from the Subject.\n *\n * Example\n * export class Component extends LitElement {\n *  @property()\n *  prop = 'prop';\n *\n *  @observe()\n *  prop$ = new ReplaySubject();\n *\n *  @state()\n *  prop1 = 'prop1';\n *\n *  @observe()\n *  prop1$ = new BehaviorSubject(this.prop1);\n *\n *  @property()\n *  prop3 = 'prop3';\n *\n *  @observe()\n *  prop3$ = new Subject();\n * }\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function observe(property) {\n    return (context, name) => {\n        const isLegacy = (context, name) => {\n            return name !== undefined;\n        };\n        const subjectKey = (isLegacy(context, name) ? name : context.key);\n        const propertyKey = property ?? subjectKey.slice(0, -1);\n        return isLegacy(context, name)\n            ? legacyObserve(context, subjectKey, propertyKey)\n            : standardObserve(context, subjectKey, propertyKey);\n    };\n}\n//# sourceMappingURL=observe.decorator.js.map"],"names":["throwSubjectError","subject$","getReactiveDescriptor","proto","propertyKey","ownDescriptor","legacyObserve","subjectKey","reactiveDescriptor","internalSubjectKey","propertyDescriptor","newValue","_a","value$","standardObserve","context","clazz","observe","property","name","isLegacy"],"mappings":"AAAA,MAAMA,EAAqBC,GAAa,CACpC,GAAIA,GAAY,CAACA,EAAS,KACtB,KAAM,oCAAoCA,mDAElD,EACMC,EAAwB,CAACC,EAAOC,IAAgB,CAClD,MAAMC,EAAgB,OAAO,yBAAyBF,EAAOC,CAAW,EACxE,GAAI,CAACC,EACD,KAAM,6CAA6CD,sGAEvD,OAAOC,CACX,EACMC,EAAgB,CAACH,EAAOI,EAAYH,IAAgB,CACtD,MAAMI,EAAqBN,EAAsBC,EAAOC,CAAW,EAC7DK,EAAqB,OAAOF,CAAU,EACtCG,EAAqB,CACvB,GAAGF,EACH,IAAIG,EAAU,CAjBtB,IAAAC,GAkBYA,EAAAJ,EAAmB,MAAnB,MAAAI,EAAwB,KAAK,KAAMD,GAC/B,KAAKF,IACL,KAAKA,GAAoB,KAAKE,CAAQ,CAE7C,CACT,EAiBI,OAAO,eAAeR,EAAOI,EAhBH,CACtB,KAAM,CACF,OAAO,KAAKE,EACf,EACD,IAAII,EAAQ,CACRb,EAAkBa,CAAM,EAMxB,OAAO,eAAe,KAAMJ,EALT,CACf,MAAOI,EACP,WAAY,GACZ,aAAc,EAC9B,CACsE,CAC7D,EACD,WAAY,GACZ,aAAc,EACtB,CAC8D,EAC1D,OAAO,eAAeV,EAAOC,EAAaM,CAAkB,CAChE,EACMI,EAAkB,CAACC,EAASR,EAAYH,KACnC,CACH,GAAGW,EACH,aAAc,CA9CtB,IAAAH,EA+CY,MAAMX,GAAWW,EAAAG,EAAQ,cAAR,YAAAH,EAAqB,KAAK,MAC3C,OAAAZ,EAAkBC,CAAQ,EAC1BA,EAAS,KAAK,KAAKG,EAAY,EACxBH,CACV,EACD,SAASe,EAAO,CACZ,MAAMb,EAAQa,EAAM,UACdR,EAAqBN,EAAsBC,EAAOC,CAAW,EAC7DM,EAAqB,CACvB,GAAGF,EACH,IAAIG,EAAU,CAzD9B,IAAAC,GA0DoBA,EAAAJ,EAAmB,MAAnB,MAAAI,EAAwB,KAAK,KAAMD,GAC/B,KAAKJ,IACL,KAAKA,GAAY,KAAKI,CAAQ,CAErC,CACjB,EACY,OAAO,eAAeR,EAAOC,EAAaM,CAAkB,CAC/D,CACT,GA4BO,SAASO,EAAQC,EAAU,CAC9B,MAAO,CAACH,EAASI,IAAS,CACtB,MAAMC,EAAW,CAACL,EAASI,IAChBA,IAAS,OAEdZ,EAAca,EAASL,EAASI,CAAI,EAAIA,EAAOJ,EAAQ,IACvDX,EAAcc,GAAA,KAAAA,EAAYX,EAAW,MAAM,EAAG,EAAE,EACtD,OAAOa,EAASL,EAASI,CAAI,EACvBb,EAAcS,EAASR,EAAYH,CAAW,EAC9CU,EAAgBC,EAASR,EAAYH,CAAW,CAC9D,CACA"}