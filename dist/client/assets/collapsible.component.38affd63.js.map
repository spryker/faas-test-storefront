{"version":3,"file":"collapsible.component.38affd63.js","sources":["../../../node_modules/@spryker-oryx/ui/collapsible/src/collapsible.component.js"],"sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { when } from 'lit/directives/when.js';\nimport { collapsibleBaseStyle } from './styles';\nexport class CollapsibleComponent extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.appearance = \"block\" /* CollapsibleAppearance.Block */;\n        this.toggleControlType = \"iconButton\" /* CollapsibleToggleControlType.IconButton */;\n    }\n    render() {\n        return html `\n      <details ?open=${this.open}>\n        <summary tabindex=${this.isInline ? -1 : 0}>\n          <slot name=\"header\">${this.header}</slot>\n          ${this.renderToggleControl()}\n          <slot name=\"aside\"></slot>\n        </summary>\n        <slot part=\"content\"></slot>\n      </details>\n    `;\n    }\n    renderToggleControl() {\n        return html `\n      ${when(this.toggleControlType !== \"textButton\" /* CollapsibleToggleControlType.TextButton */, () => html `\n          <oryx-icon-button size=${this.controlSize}>\n            <span tabindex=${this.isInline ? 0 : -1}>\n              <slot name=\"collapsed\">\n                <oryx-icon type=\"expand\"></oryx-icon>\n              </slot>\n              <slot name=\"expanded\">\n                <oryx-icon type=\"collapse\"></oryx-icon>\n              </slot>\n            </span>\n          </oryx-icon-button>\n        `)}\n      ${when(this.toggleControlType === \"textButton\" /* CollapsibleToggleControlType.TextButton */, () => html `\n          <oryx-button type=\"text\" size=${this.controlSize}>\n            <span tabindex=${this.isInline ? 0 : -1}>\n              <slot name=\"collapsed\"> Hide </slot>\n              <slot name=\"expanded\"> Show </slot>\n            </span>\n          </oryx-button>\n        `)}\n    `;\n    }\n    /**\n     * returns the size of the control based on the appearance of the component.\n     */\n    get controlSize() {\n        return this.isInline ? 'small' : 'medium';\n    }\n    get isInline() {\n        return this.appearance === \"inline\" /* CollapsibleAppearance.Inline */;\n    }\n}\nCollapsibleComponent.styles = [collapsibleBaseStyle];\n__decorate([\n    property({ reflect: true }),\n    __metadata(\"design:type\", Object)\n], CollapsibleComponent.prototype, \"appearance\", void 0);\n__decorate([\n    property({ type: Object }),\n    __metadata(\"design:type\", Object)\n], CollapsibleComponent.prototype, \"toggleControlType\", void 0);\n__decorate([\n    property({ type: Boolean }),\n    __metadata(\"design:type\", Boolean)\n], CollapsibleComponent.prototype, \"open\", void 0);\n__decorate([\n    property(),\n    __metadata(\"design:type\", String)\n], CollapsibleComponent.prototype, \"header\", void 0);\n//# sourceMappingURL=collapsible.component.js.map"],"names":["CollapsibleComponent","LitElement","html","when","collapsibleBaseStyle","__decorate","property","__metadata"],"mappings":"yHAKO,MAAMA,UAA6BC,CAAW,CACjD,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,WAAa,QAClB,KAAK,kBAAoB,YAC5B,CACD,QAAS,CACL,OAAOC;AAAAA,uBACQ,KAAK;AAAA,4BACA,KAAK,SAAW,GAAK;AAAA,gCACjB,KAAK;AAAA,YACzB,KAAK;;;;;KAMZ,CACD,qBAAsB,CAClB,OAAOA;AAAAA,QACPC,EAAK,KAAK,oBAAsB,aAA4D,IAAMD;AAAAA,mCACvE,KAAK;AAAA,6BACX,KAAK,SAAW,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASxC;AAAA,QACDC,EAAK,KAAK,oBAAsB,aAA4D,IAAMD;AAAAA,0CAChE,KAAK;AAAA,6BAClB,KAAK,SAAW,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA,SAKxC;AAAA,KAEJ,CAID,IAAI,aAAc,CACd,OAAO,KAAK,SAAW,QAAU,QACpC,CACD,IAAI,UAAW,CACX,OAAO,KAAK,aAAe,QAC9B,CACL,CACAF,EAAqB,OAAS,CAACI,CAAoB,EACnDC,EAAW,CACPC,EAAS,CAAE,QAAS,GAAM,EAC1BC,EAAW,cAAe,MAAM,CACpC,EAAGP,EAAqB,UAAW,aAAc,MAAM,EACvDK,EAAW,CACPC,EAAS,CAAE,KAAM,OAAQ,EACzBC,EAAW,cAAe,MAAM,CACpC,EAAGP,EAAqB,UAAW,oBAAqB,MAAM,EAC9DK,EAAW,CACPC,EAAS,CAAE,KAAM,QAAS,EAC1BC,EAAW,cAAe,OAAO,CACrC,EAAGP,EAAqB,UAAW,OAAQ,MAAM,EACjDK,EAAW,CACPC,EAAU,EACVC,EAAW,cAAe,MAAM,CACpC,EAAGP,EAAqB,UAAW,SAAU,MAAM"}