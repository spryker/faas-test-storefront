{"version":3,"file":"address-list.component.2405571e.js","sources":["../../../node_modules/@spryker-oryx/user/src/utilities/address.js","../../../node_modules/@spryker-oryx/user/address-list/src/address-list.model.js","../../../node_modules/@spryker-oryx/user/address-list/src/address-list.styles.js","../../../node_modules/@spryker-oryx/user/address-list/src/address-list.component.js"],"sourcesContent":["export function formatAddress(address) {\n    return `\n    ${address.salutation}. ${address.firstName} ${address.lastName},\n    ${address?.company ? `${address.company},` : ''}\n    ${address.address1} ${address.address2} ${address?.address3},\n    ${address.zipCode} ${address.city},\n    ${address?.country}\n    `;\n}\n//# sourceMappingURL=address.js.map","export const ADDRESS_CHANGE_EVENT = 'oryx.address-change';\nexport var AddressType;\n(function (AddressType) {\n    AddressType[\"Shipping\"] = \"shipping\";\n    AddressType[\"Billing\"] = \"billing\";\n})(AddressType || (AddressType = {}));\n//# sourceMappingURL=address-list.model.js.map","import { css } from 'lit';\nexport const styles = css `\n  :host {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    gap: 10px;\n  }\n\n  .details {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n  }\n\n  .controls {\n    display: flex;\n    width: 100%;\n    margin: 0 -3px;\n  }\n\n  .controls.selectable {\n    padding-inline-start: 27px;\n  }\n\n  .controls > * {\n    margin-inline-end: 10px;\n  }\n\n  slot[name='empty'] {\n    --oryx-icon-size: 40px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 50px;\n    background: var(--oryx-color-neutral-300, #f5f5f5);\n    color: #1c1b1f;\n  }\n\n  slot[name='empty'] oryx-icon {\n    margin-bottom: 15px;\n  }\n`;\n//# sourceMappingURL=address-list.styles.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { ComponentMixin, ContentController } from '@spryker-oryx/experience';\nimport { resolve } from '@spryker-oryx/injector';\nimport { AddressService, formatAddress } from '@spryker-oryx/user';\nimport { hydratable, isDefined } from '@spryker-oryx/utilities';\nimport { i18n } from '@spryker-oryx/utilities/i18n';\nimport { asyncValue, subscribe } from '@spryker-oryx/utilities/lit-rxjs';\nimport { html } from 'lit';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { when } from 'lit/directives/when.js';\nimport { combineLatest, distinctUntilChanged, map, ReplaySubject, take, tap, } from 'rxjs';\nimport { ADDRESS_CHANGE_EVENT, } from './address-list.model';\nimport { styles } from './address-list.styles';\nlet AddressListComponent = class AddressListComponent extends ComponentMixin() {\n    constructor() {\n        super(...arguments);\n        this.selectedAddress$ = new ReplaySubject(1);\n        this.handle$ = this.selectedAddress$.pipe(tap((address) => {\n            if (address) {\n                this.dispatchEvent(new CustomEvent(ADDRESS_CHANGE_EVENT, {\n                    bubbles: true,\n                    composed: true,\n                    detail: {\n                        address,\n                    },\n                }));\n            }\n        }), distinctUntilChanged());\n        this.addresses$ = combineLatest([\n            resolve(AddressService).getAddresses().pipe(distinctUntilChanged()),\n            new ContentController(this).getOptions(),\n        ]).pipe(tap(([addresses, options]) => {\n            if (!options.selectable) {\n                this.selectedAddress$.next(null);\n                return;\n            }\n            const defaultAddress = addresses?.find((address) => this.isDefault(address, options?.defaultType));\n            this.selectedAddress$.next(defaultAddress ?? addresses?.[0] ?? null);\n        }));\n        this.data$ = combineLatest([\n            this.addresses$,\n            this.selectedAddress$,\n        ]).pipe(map(([addresses, selectedAddress]) => [...addresses, selectedAddress]));\n    }\n    isDefault(address, type = \"shipping\" /* AddressType.Shipping */) {\n        return type === \"shipping\" /* AddressType.Shipping */\n            ? address?.isDefaultShipping ?? false\n            : address?.isDefaultBilling ?? false;\n    }\n    onChange(e) {\n        const radio = e.target;\n        this.addresses$\n            .pipe(take(1), tap(([addresses]) => {\n            this.selectedAddress$.next(addresses?.find((address) => address.id === radio.value) ?? null);\n        }))\n            .subscribe();\n    }\n    render() {\n        return html `${asyncValue(this.data$, ([addresses, options, selectedAddress]) => {\n            const { selectable, editable, defaultType } = options;\n            if (!addresses || !addresses.length) {\n                return html ` <slot name=\"empty\">\n            <oryx-icon type=\"carrier\" size=\"large\"></oryx-icon>\n            ${i18n('user.address.no-addresses')}\n          </slot>`;\n            }\n            return html `${repeat(addresses, (address) => address.id, (address) => {\n                const isSelected = selectable\n                    ? selectedAddress?.id === address.id\n                    : false;\n                return html `<oryx-tile .selected=${isSelected}>\n              <div>\n                <div class=\"details\">\n                  <oryx-radio>\n                    ${when(selectable, () => html `<input\n                        name=\"address\"\n                        type=\"radio\"\n                        value=\"${isDefined(address.id) ? address.id : ''}\"\n                        ?checked=${isSelected}\n                        @change=${this.onChange}\n                      />`)}\n                    ${formatAddress(address)}\n                  </oryx-radio>\n                  ${when(this.isDefault(address, defaultType), () => html `<oryx-chip\n                        >${i18n('user.address.default')}</oryx-chip\n                      >`)}\n                </div>\n                ${when(editable ?? true, () => html `<div\n                      class=\"controls ${selectable ? 'selectable' : ''}\"\n                    >\n                      <oryx-button type=\"text\">\n                        <button>${i18n('user.address.edit')}</button>\n                      </oryx-button>\n                    </div>`)}\n              </div>\n            </oryx-tile>`;\n            })}`;\n        })}`;\n    }\n};\nAddressListComponent.styles = styles;\n__decorate([\n    subscribe(),\n    __metadata(\"design:type\", Object)\n], AddressListComponent.prototype, \"handle$\", void 0);\nAddressListComponent = __decorate([\n    hydratable('window:load')\n], AddressListComponent);\nexport { AddressListComponent };\n//# sourceMappingURL=address-list.component.js.map"],"names":["formatAddress","address","ADDRESS_CHANGE_EVENT","AddressType","styles","css","AddressListComponent","ComponentMixin","ReplaySubject","tap","distinctUntilChanged","combineLatest","resolve","AddressService","ContentController","addresses","options","defaultAddress","_a","map","selectedAddress","type","_b","e","radio","take","html","asyncValue","selectable","editable","defaultType","i18n","repeat","isSelected","when","isDefined","__decorate","subscribe","__metadata","hydratable"],"mappings":"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"}