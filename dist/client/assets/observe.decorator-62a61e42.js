const l=e=>{if(e&&!e.next)throw`Invalid observe value: incorrect ${e} for observe decorator, please use rxjs subjects`},p=(e,r)=>{const s=Object.getOwnPropertyDescriptor(e,r);if(!s)throw`Invalid observed property name: incorrect ${r} for observe decorator, please use already created reactive property name as an element to observe`;return s},b=(e,r,s)=>{const o=p(e,s),t=Symbol(r),c={...o,set(i){var n;(n=o.set)==null||n.call(this,i),this[t]&&this[t].next(i)}};Object.defineProperty(e,r,{get(){return this[t]},set(i){l(i),Object.defineProperty(this,t,{value:i,enumerable:!1,configurable:!0})},enumerable:!1,configurable:!0}),Object.defineProperty(e,s,c)},u=(e,r,s)=>({...e,initializer(){var t;const o=(t=e.initializer)==null?void 0:t.call(this);return l(o),o.next(this[s]),o},finisher(o){const t=o.prototype,c=p(t,s),a={...c,set(i){var n;(n=c.set)==null||n.call(this,i),this[r]&&this[r].next(i)}};Object.defineProperty(t,s,a)}});function d(e){return(r,s)=>{const o=(a,i)=>i!==void 0,t=o(r,s)?s:r.key,c=e??t.slice(0,-1);return o(r,s)?b(r,t,c):u(r,t,c)}}export{d as o};
