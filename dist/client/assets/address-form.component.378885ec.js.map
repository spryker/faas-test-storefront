{"version":3,"file":"address-form.component.378885ec.js","sources":["../../../node_modules/@spryker-oryx/user/address-form/src/address-form.styles.js","../../../node_modules/@spryker-oryx/user/address-form/src/address-form.component.js"],"sourcesContent":["import { css } from 'lit';\nexport const styles = css `\n  :host {\n    --oryx-layout-gap: 10px;\n  }\n\n  form {\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--oryx-layout-gap);\n  }\n`;\n//# sourceMappingURL=address-form.styles.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { FormComponentMixin, FormRenderer, formStyles, } from '@spryker-oryx/form';\nimport { resolve } from '@spryker-oryx/injector';\nimport { CountryService } from '@spryker-oryx/site';\nimport { AddressFormService, AddressService } from '@spryker-oryx/user';\nimport { hydratable } from '@spryker-oryx/utilities';\nimport { asyncValue, observe } from '@spryker-oryx/utilities/lit-rxjs';\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { BehaviorSubject, combineLatest, map, of, switchMap } from 'rxjs';\nimport { styles } from './address-form.styles';\nlet AddressFormComponent = class AddressFormComponent extends FormComponentMixin() {\n    constructor() {\n        super(...arguments);\n        this.fieldRenderer = resolve(FormRenderer);\n        this.countryService = resolve(CountryService);\n        this.formService = resolve(AddressFormService);\n        this.addressService = resolve(AddressService);\n        this.country$ = new BehaviorSubject(this.country);\n        this.activeCountry$ = this.country$.pipe(switchMap((country) => country\n            ? of(country)\n            : this.countryService.getAll().pipe(switchMap((countries) => countries.length === 1\n                ? of(countries[0].iso2Code)\n                : this.addressService.getCurrentAddress().pipe(map((address) => {\n                    return address?.iso2Code ?? countries[0].iso2Code;\n                }))))));\n        this.data$ = combineLatest([\n            this.countryService.getAll(),\n            this.activeCountry$,\n        ]);\n        this.form$ = this.activeCountry$.pipe(switchMap((country) => country\n            ? this.formService\n                .getForm({ country })\n                .pipe(map((form) => form?.data?.options))\n            : of([])));\n    }\n    render() {\n        return html `<form>\n      ${asyncValue(this.data$, ([countries, currentCountry]) => html `\n          ${countries.length > 1\n            ? html `<oryx-select class=\"w100\" label=\"Country *\">\n                <select\n                  name=\"country\"\n                  .value=${currentCountry}\n                  @change=${this.onCountryChange}\n                >\n                  ${countries.map((country) => {\n                return html `<option\n                      value=${country.iso2Code}\n                      ?selected=${country.iso2Code === currentCountry}\n                    >\n                      ${country.name}\n                    </option>`;\n            })}\n                </select>\n              </oryx-select>`\n            : html ``}\n        `)}\n      ${asyncValue(this.form$, (form) => form ? this.fieldRenderer.buildForm(form) : html ``)}\n    </form>`;\n    }\n    onCountryChange(e) {\n        const select = e.target;\n        this.country = select.options[select.selectedIndex].value;\n        this.countryService.set(this.country);\n    }\n};\nAddressFormComponent.styles = [styles, formStyles];\n__decorate([\n    property(),\n    __metadata(\"design:type\", String)\n], AddressFormComponent.prototype, \"country\", void 0);\n__decorate([\n    observe(),\n    __metadata(\"design:type\", Object)\n], AddressFormComponent.prototype, \"country$\", void 0);\nAddressFormComponent = __decorate([\n    hydratable(['mouseover', 'focusin'])\n], AddressFormComponent);\nexport { AddressFormComponent };\n//# sourceMappingURL=address-form.component.js.map"],"names":["styles","css","AddressFormComponent","FormComponentMixin","resolve","FormRenderer","CountryService","AddressFormService","AddressService","BehaviorSubject","switchMap","country","of","countries","map","address","_a","combineLatest","form","html","asyncValue","currentCountry","select","formStyles","__decorate","property","__metadata","observe","hydratable"],"mappings":"sSACO,MAAMA,EAASC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,ECUnB,IAACC,EAAuB,cAAmCC,GAAqB,CAC/E,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,cAAgBC,EAAQC,CAAY,EACzC,KAAK,eAAiBD,EAAQE,CAAc,EAC5C,KAAK,YAAcF,EAAQG,CAAkB,EAC7C,KAAK,eAAiBH,EAAQI,CAAc,EAC5C,KAAK,SAAW,IAAIC,EAAgB,KAAK,OAAO,EAChD,KAAK,eAAiB,KAAK,SAAS,KAAKC,EAAWC,GAAYA,EAC1DC,EAAGD,CAAO,EACV,KAAK,eAAe,OAAM,EAAG,KAAKD,EAAWG,GAAcA,EAAU,SAAW,EAC5ED,EAAGC,EAAU,GAAG,QAAQ,EACxB,KAAK,eAAe,kBAAiB,EAAG,KAAKC,EAAKC,GAAY,OAC5D,OAAOC,EAAAD,GAAA,YAAAA,EAAS,WAAT,KAAAC,EAAqBH,EAAU,GAAG,QAC7D,CAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,EACd,KAAK,MAAQI,EAAc,CACvB,KAAK,eAAe,OAAQ,EAC5B,KAAK,cACjB,CAAS,EACD,KAAK,MAAQ,KAAK,eAAe,KAAKP,EAAWC,GAAYA,EACvD,KAAK,YACF,QAAQ,CAAE,QAAAA,EAAS,EACnB,KAAKG,EAAKI,GAAS,OAAA,OAAAF,EAAAE,GAAA,YAAAA,EAAM,OAAN,YAAAF,EAAY,QAAO,CAAC,EAC1CJ,EAAG,CAAA,CAAE,CAAC,CAAC,CAChB,CACD,QAAS,CACL,OAAOO;AAAAA,QACPC,EAAW,KAAK,MAAO,CAAC,CAACP,EAAWQ,CAAc,IAAMF;AAAAA,YACpDN,EAAU,OAAS,EACjBM;AAAAA;AAAAA;AAAAA,2BAGaE;AAAA,4BACC,KAAK;AAAA;AAAA,oBAEbR,EAAU,IAAKF,GACZQ;AAAAA,8BACOR,EAAQ;AAAA,kCACJA,EAAQ,WAAaU;AAAA;AAAA,wBAE/BV,EAAQ;AAAA,8BAEnB;AAAA;AAAA,8BAGCQ;AAAAA,SACL;AAAA,QACDC,EAAW,KAAK,MAAQF,GAASA,EAAO,KAAK,cAAc,UAAUA,CAAI,EAAIC,GAAO;AAAA,YAEvF,CACD,gBAAgB,EAAG,CACf,MAAMG,EAAS,EAAE,OACjB,KAAK,QAAUA,EAAO,QAAQA,EAAO,eAAe,MACpD,KAAK,eAAe,IAAI,KAAK,OAAO,CACvC,CACL,EACApB,EAAqB,OAAS,CAACF,EAAQuB,CAAU,EACjDC,EAAW,CACPC,EAAU,EACVC,EAAW,cAAe,MAAM,CACpC,EAAGxB,EAAqB,UAAW,UAAW,MAAM,EACpDsB,EAAW,CACPG,EAAS,EACTD,EAAW,cAAe,MAAM,CACpC,EAAGxB,EAAqB,UAAW,WAAY,MAAM,EACrDA,EAAuBsB,EAAW,CAC9BI,EAAmC,CACvC,EAAG1B,CAAoB"}