{"version":3,"file":"login.component.62396875.js","sources":["../../../node_modules/@spryker-oryx/auth/login/src/login.styles.js","../../../node_modules/@spryker-oryx/auth/login/src/login.component.js"],"sourcesContent":["import { css } from 'lit';\nexport const styles = css `\n  oryx-card form > * {\n    margin: 10px 0;\n  }\n\n  .options {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n//# sourceMappingURL=login.styles.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { AuthService } from '@spryker-oryx/auth';\nimport { ComponentMixin, ContentController, RouterService, } from '@spryker-oryx/experience';\nimport { resolve } from '@spryker-oryx/injector';\nimport { hydratable } from '@spryker-oryx/utilities';\nimport { asyncValue, subscribe } from '@spryker-oryx/utilities/lit-rxjs';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { when } from 'lit/directives/when.js';\nimport { BehaviorSubject, catchError, combineLatest, EMPTY, of, ReplaySubject, switchMap, tap, withLatestFrom, } from 'rxjs';\nimport { styles } from './login.styles';\nlet AuthLoginComponent = class AuthLoginComponent extends ComponentMixin() {\n    constructor() {\n        super(...arguments);\n        this.contentController = new ContentController(this);\n        this.routerService = resolve(RouterService);\n        this.authService = resolve(AuthService);\n        this.options$ = this.contentController.getOptions();\n        this.success$ = new BehaviorSubject(true);\n        this.loading$ = new BehaviorSubject(false);\n        this.data$ = combineLatest([\n            this.options$,\n            this.loading$,\n            this.success$,\n        ]);\n        this.authTrigger$ = new ReplaySubject(1);\n        this.auth$ = this.authTrigger$.pipe(tap(() => this.loading$.next(true)), switchMap((user) => this.authService\n            .login({\n            username: user.email,\n            password: user.password,\n            remember: user.rememberme,\n        })\n            .pipe(catchError((e) => {\n            this.success$.next(false);\n            this.loading$.next(false);\n            return EMPTY;\n        }))), withLatestFrom(this.options$), switchMap(([success, options]) => {\n            if (!success) {\n                this.success$.next(success);\n                return of(undefined);\n            }\n            if (options.disableRedirect) {\n                return of(undefined);\n            }\n            if (options.url) {\n                this.routerService.navigate(options.url);\n                return of(undefined);\n            }\n            return this.routerService.previousRoute().pipe(tap((previousPage) => {\n                if (previousPage) {\n                    this.routerService.navigate(previousPage);\n                    return;\n                }\n                this.routerService.navigate('/');\n            }));\n        }), tap({\n            next: () => this.success$.next(true),\n            complete: () => this.loading$.next(false),\n        }));\n    }\n    handleLogin(e) {\n        e.preventDefault();\n        const form = e.target;\n        const formData = new FormData(form);\n        this.authTrigger$.next({\n            email: formData.get('email'),\n            password: formData.get('password'),\n            rememberme: !!formData.get('rememberme'),\n        });\n    }\n    render() {\n        return html `${asyncValue(this.data$, ([options, loading, success]) => {\n            return html `<oryx-card>\n      <h1 slot=\"header\">\n        ${options?.title ?? 'Access your account'}\n      </h1>\n      ${success\n                ? ''\n                : html `<oryx-notification type=\"error\">\n              The email or/and password entered is not valid. Please try again.\n            </oryx-notification>`}\n      <form @submit=${this.handleLogin} method=\"post\">\n        <oryx-input label=\"Email *\" ?haserror=\"${!success}\"><input type=\"email\" name=\"email\" placeholder=\"Email\" required/></oryx-input>\n        <oryx-password-input ?haserror=\"${!success}\" label=\"Password *\" strategy=\"${ifDefined(options.strategy)}\"/><input type=\"password\" name=\"password\" placeholder=\"Password\" required/></oryx-password-input>\n        <div class=\"options\">\n          ${when(options.showRememberMe, () => html ` <oryx-checkbox>\n              <input type=\"checkbox\" name=\"rememberme\" />\n              Remember me\n            </oryx-checkbox>`, () => html `<span></span>`)}\n          <oryx-link><a href=\"#\">Forgot Password?</a></oryx-link>\n        </div>\n        <oryx-button size=\"small\"><button type=\"submit\" ?disabled=${loading}>Login</button></oryx-button>\n      </form>\n    </oryx-card>`;\n        })}`;\n    }\n};\nAuthLoginComponent.styles = styles;\n__decorate([\n    subscribe(),\n    __metadata(\"design:type\", Object)\n], AuthLoginComponent.prototype, \"auth$\", void 0);\nAuthLoginComponent = __decorate([\n    hydratable(['mouseover', 'focus'])\n], AuthLoginComponent);\nexport { AuthLoginComponent };\n//# sourceMappingURL=login.component.js.map"],"names":["styles","css","AuthLoginComponent","ComponentMixin","ContentController","resolve","RouterService","AuthService","BehaviorSubject","combineLatest","ReplaySubject","tap","switchMap","user","catchError","e","EMPTY","withLatestFrom","success","options","of","previousPage","form","formData","html","asyncValue","loading","_a","ifDefined","when","__decorate","subscribe","__metadata","hydratable"],"mappings":"gUACO,MAAMA,EAASC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,ECUnB,IAACC,EAAqB,cAAiCC,GAAiB,CACvE,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,kBAAoB,IAAIC,EAAkB,IAAI,EACnD,KAAK,cAAgBC,EAAQC,CAAa,EAC1C,KAAK,YAAcD,EAAQE,CAAW,EACtC,KAAK,SAAW,KAAK,kBAAkB,WAAU,EACjD,KAAK,SAAW,IAAIC,EAAgB,EAAI,EACxC,KAAK,SAAW,IAAIA,EAAgB,EAAK,EACzC,KAAK,MAAQC,EAAc,CACvB,KAAK,SACL,KAAK,SACL,KAAK,QACjB,CAAS,EACD,KAAK,aAAe,IAAIC,EAAc,CAAC,EACvC,KAAK,MAAQ,KAAK,aAAa,KAAKC,EAAI,IAAM,KAAK,SAAS,KAAK,EAAI,CAAC,EAAGC,EAAWC,GAAS,KAAK,YAC7F,MAAM,CACP,SAAUA,EAAK,MACf,SAAUA,EAAK,SACf,SAAUA,EAAK,UAC3B,CAAS,EACI,KAAKC,EAAYC,IAClB,KAAK,SAAS,KAAK,EAAK,EACxB,KAAK,SAAS,KAAK,EAAK,EACjBC,EACV,CAAC,CAAC,EAAGC,EAAe,KAAK,QAAQ,EAAGL,EAAU,CAAC,CAACM,EAASC,CAAO,IACxDD,EAIDC,EAAQ,gBACDC,EAAG,MAAS,EAEnBD,EAAQ,KACR,KAAK,cAAc,SAASA,EAAQ,GAAG,EAChCC,EAAG,MAAS,GAEhB,KAAK,cAAc,cAAa,EAAG,KAAKT,EAAKU,GAAiB,CACjE,GAAIA,EAAc,CACd,KAAK,cAAc,SAASA,CAAY,EACxC,MACH,CACD,KAAK,cAAc,SAAS,GAAG,CAClC,CAAA,CAAC,GAhBE,KAAK,SAAS,KAAKH,CAAO,EACnBE,EAAG,MAAS,EAgB1B,EAAGT,EAAI,CACJ,KAAM,IAAM,KAAK,SAAS,KAAK,EAAI,EACnC,SAAU,IAAM,KAAK,SAAS,KAAK,EAAK,CAC3C,CAAA,CAAC,CACL,CACD,YAAY,EAAG,CACX,EAAE,eAAc,EAChB,MAAMW,EAAO,EAAE,OACTC,EAAW,IAAI,SAASD,CAAI,EAClC,KAAK,aAAa,KAAK,CACnB,MAAOC,EAAS,IAAI,OAAO,EAC3B,SAAUA,EAAS,IAAI,UAAU,EACjC,WAAY,CAAC,CAACA,EAAS,IAAI,YAAY,CACnD,CAAS,CACJ,CACD,QAAS,CACL,OAAOC,IAAQC,EAAW,KAAK,MAAO,CAAC,CAACN,EAASO,EAASR,CAAO,IAAM,OACnE,OAAOM;AAAAA;AAAAA,WAETG,EAAAR,GAAA,YAAAA,EAAS,QAAT,KAAAQ,EAAkB;AAAA;AAAA,QAEpBT,EACU,GACAM;AAAAA;AAAAA;AAAAA,sBAGI,KAAK;AAAA,iDACsB,CAACN;AAAA,0CACR,CAACA,mCAAyCU,EAAUT,EAAQ,QAAQ;AAAA;AAAA,YAElGU,EAAKV,EAAQ,eAAgB,IAAMK;AAAAA;AAAAA;AAAAA,8BAGhB,IAAMA,gBAAoB;AAAA;AAAA;AAAA,oEAGWE;AAAA;AAAA,iBAG3D,CAAA,GACJ,CACL,EACAxB,EAAmB,OAASF,EAC5B8B,EAAW,CACPC,EAAW,EACXC,EAAW,cAAe,MAAM,CACpC,EAAG9B,EAAmB,UAAW,QAAS,MAAM,EAChDA,EAAqB4B,EAAW,CAC5BG,EAAiC,CACrC,EAAG/B,CAAkB"}