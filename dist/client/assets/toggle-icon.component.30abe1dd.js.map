{"version":3,"file":"toggle-icon.component.30abe1dd.js","sources":["../../../node_modules/@spryker-oryx/ui/actions/toggle-icon/src/toggle-icon.styles.js","../../../node_modules/@spryker-oryx/ui/actions/toggle-icon/src/toggle-icon.component.js"],"sourcesContent":["import { css } from 'lit';\nexport const toggleIconStyles = css `\n  :host {\n    --oryx-icon-size: var(--oryx-icon-size-large);\n\n    position: relative;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n    border-radius: var(--oryx-border-radius-small);\n  }\n\n  :host([has-text]),\n  :host([has-text]) ::slotted(input)::after {\n    border-radius: var(--oryx-border-radius-large);\n  }\n\n  :host([hasError])\n    ::slotted(:is(input, input:hover, input:checked, input:checked:hover))::after {\n    border-color: var(--oryx-color-error-300);\n  }\n\n  :host,\n  ::slotted(*) {\n    transition: var(--oryx-transition-time);\n  }\n\n  :host(:not([has-text])) {\n    gap: 0;\n    padding: 7px;\n  }\n\n  :host([has-text][size='small']) {\n    padding: 8px 12px;\n  }\n\n  :host([has-text]),\n  :host([has-text][size='medium']) {\n    padding: 8px 12px;\n  }\n\n  :host([has-text][size='large']) {\n    padding: 12px 16px;\n  }\n\n  ::slotted([disabled]) {\n    pointer-events: none;\n  }\n\n  ::slotted(input) {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    appearance: none;\n    outline: none;\n    border-radius: var(--oryx-border-radius-small);\n  }\n\n  ::slotted(input)::after {\n    cursor: pointer;\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    box-sizing: border-box;\n    border-radius: var(--oryx-border-radius-small);\n    background: var(--oryx-color-canvas-100);\n    border: 1px solid var(--oryx-color-canvas-500);\n  }\n\n  ::slotted(input:hover:not([disabled]))::after {\n    background: var(--oryx-color-canvas-200);\n    border-color: var(--oryx-color-neutral-200);\n    box-shadow: 0 1px 3px 0 var(--oryx-elevation-color-2);\n  }\n\n  ::slotted(input:active:not([disabled]))::after {\n    background: var(--oryx-color-canvas-200);\n    border-color: var(--oryx-color-neutral-300);\n  }\n\n  ::slotted(input:checked:active:not([disabled]))::after,\n  ::slotted(input:checked:hover:not([disabled]))::after {\n    border-color: var(--oryx-color-primary-400);\n  }\n\n  ::slotted(input:checked:active:not([disabled]))::after {\n    background: var(--oryx-color-canvas-200);\n  }\n\n  ::slotted(input:focus-visible:not(:active))::after {\n    box-shadow: 0 0 3px var(--oryx-color-primary-300),\n      inset 0 0 0 1px var(--oryx-color-canvas-100),\n      inset 0 0 0 2px var(--oryx-color-neutral-200);\n    border: none;\n  }\n\n  ::slotted(input:checked:focus-visible:not(:active))::after {\n    box-shadow: 0 0 3px var(--oryx-color-primary-300),\n      inset 0 0 0 1px var(--oryx-color-primary-100),\n      inset 0 0 0 2px var(--oryx-color-primary-300);\n    border: none;\n  }\n\n  :host([hasError]) ::slotted(input:focus-visible:not(:active))::after {\n    box-shadow: 0 0 3px var(--oryx-color-primary-300),\n      inset 0 0 0 1px var(--oryx-color-error-300),\n      inset 0 0 0 2px var(--oryx-color-neutral-200);\n  }\n\n  :host([hasError]) ::slotted(input:checked:focus-visible:not(:active))::after {\n    box-shadow: 0 0 3px var(--oryx-color-primary-300),\n      inset 0 0 0 1px var(--oryx-color-error-300),\n      inset 0 0 0 2px var(--oryx-color-primary-300);\n  }\n\n  ::slotted(input[disabled])::after {\n    background: var(--oryx-color-canvas-200);\n    border-color: var(--oryx-color-neutral-200);\n  }\n\n  ::slotted(input:checked:not([disabled]))::after {\n    border-color: var(--oryx-color-primary-300);\n    background: var(--oryx-color-primary-100);\n  }\n\n  ::slotted(input:checked[disabled])::after {\n    border-color: var(--oryx-color-neutral-300);\n  }\n\n  ::slotted(oryx-icon),\n  ::slotted(span) {\n    z-index: 1;\n    pointer-events: none;\n  }\n\n  ::slotted(span) {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  ::slotted(oryx-icon) {\n    color: var(--oryx-color-neutral-300);\n  }\n\n  :host([checked]:not([disabled])) ::slotted(oryx-icon) {\n    color: var(--oryx-color-primary-300);\n  }\n`;\n//# sourceMappingURL=toggle-icon.styles.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { getControl } from '../../../form/utilities';\nimport { toggleIconStyles } from './toggle-icon.styles';\nconst GENERATED_INPUT_EVENT = 'oryx-gen';\nexport class ToggleIconComponent extends LitElement {\n    connectedCallback() {\n        super.connectedCallback();\n        this.addEventListener('input', this.onInput);\n    }\n    disconnectedCallback() {\n        this.removeEventListener('input', this.onInput);\n    }\n    render() {\n        return html `<slot></slot>`;\n    }\n    onInput(e) {\n        const el = e.target;\n        this.toggleAttribute('checked', el.checked);\n        if (this.isInRadioGroup(el) &&\n            e.detail?.toString() !== GENERATED_INPUT_EVENT) {\n            this.updateSiblings(el);\n        }\n    }\n    isInRadioGroup(el) {\n        return el.type === 'radio' && el.hasAttribute('name');\n    }\n    updateSiblings(input) {\n        const siblings = Array.from(this.getRootNode().querySelectorAll(`[name=${input.getAttribute('name')}]`)).filter((sibling) => sibling !== input);\n        siblings.forEach((sibling) => sibling.dispatchEvent(new CustomEvent('input', {\n            bubbles: true,\n            composed: true,\n            detail: GENERATED_INPUT_EVENT,\n        })));\n    }\n    firstUpdated() {\n        const input = getControl(this);\n        this.toggleAttribute('has-text', !!this.getSpan());\n        this.toggleAttribute('disabled', input.hasAttribute('disabled'));\n        this.toggleAttribute('checked', input.hasAttribute('checked'));\n        const controlAttrObserver = new MutationObserver((mutationsList) => {\n            for (const mutation of mutationsList) {\n                if (typeof mutation.attributeName === 'string') {\n                    this.toggleAttribute(mutation.attributeName);\n                }\n            }\n        });\n        controlAttrObserver.observe(input, {\n            attributeFilter: ['disabled'],\n        });\n    }\n    getSpan() {\n        return this.shadowRoot\n            ?.querySelector('slot')\n            ?.assignedElements({ flatten: true })\n            .find((e) => e.tagName.toLowerCase() === 'span');\n    }\n}\nToggleIconComponent.styles = [toggleIconStyles];\n__decorate([\n    property({ type: Boolean }),\n    __metadata(\"design:type\", Boolean)\n], ToggleIconComponent.prototype, \"hasError\", void 0);\n//# sourceMappingURL=toggle-icon.component.js.map"],"names":["toggleIconStyles","css","GENERATED_INPUT_EVENT","ToggleIconComponent","LitElement","html","e","el","_a","input","sibling","getControl","mutationsList","mutation","_b","__decorate","property","__metadata"],"mappings":"yJACO,MAAMA,EAAmwB,WACvB,MAAMC,UAA4BC,CAAW,CAChD,mBAAoB,CAChB,MAAM,kBAAiB,EACvB,KAAK,iBAAiB,QAAS,KAAK,OAAO,CAC9C,CACD,sBAAuB,CACnB,KAAK,oBAAoB,QAAS,KAAK,OAAO,CACjD,CACD,QAAS,CACL,OAAOC,gBACV,CACD,QAAQC,EAAG,OACP,MAAMC,EAAKD,EAAE,OACb,KAAK,gBAAgB,UAAWC,EAAG,OAAO,EACtC,KAAK,eAAeA,CAAE,KACtBC,EAAAF,EAAE,SAAF,YAAAE,EAAU,cAAeN,GACzB,KAAK,eAAeK,CAAE,CAE7B,CACD,eAAeA,EAAI,CACf,OAAOA,EAAG,OAAS,SAAWA,EAAG,aAAa,MAAM,CACvD,CACD,eAAeE,EAAO,CACD,MAAM,KAAK,KAAK,cAAc,iBAAiB,SAASA,EAAM,aAAa,MAAM,IAAI,CAAC,EAAE,OAAQC,GAAYA,IAAYD,CAAK,EACrI,QAASC,GAAYA,EAAQ,cAAc,IAAI,YAAY,QAAS,CACzE,QAAS,GACT,SAAU,GACV,OAAQR,CACX,CAAA,CAAC,CAAC,CACN,CACD,cAAe,CACX,MAAMO,EAAQE,EAAW,IAAI,EAC7B,KAAK,gBAAgB,WAAY,CAAC,CAAC,KAAK,QAAO,CAAE,EACjD,KAAK,gBAAgB,WAAYF,EAAM,aAAa,UAAU,CAAC,EAC/D,KAAK,gBAAgB,UAAWA,EAAM,aAAa,SAAS,CAAC,EACjC,IAAI,iBAAkBG,GAAkB,CAChE,UAAWC,KAAYD,EACf,OAAOC,EAAS,eAAkB,UAClC,KAAK,gBAAgBA,EAAS,aAAa,CAG/D,CAAS,EACmB,QAAQJ,EAAO,CAC/B,gBAAiB,CAAC,UAAU,CACxC,CAAS,CACJ,CACD,SAAU,SACN,OAAOK,GAAAN,EAAA,KAAK,aAAL,YAAAA,EACD,cAAc,UADb,YAAAM,EAED,iBAAiB,CAAE,QAAS,KAC7B,KAAMR,GAAMA,EAAE,QAAQ,YAAW,IAAO,OAChD,CACL,CACAH,EAAoB,OAAS,CAACH,CAAgB,EAC9Ce,EAAW,CACPC,EAAS,CAAE,KAAM,QAAS,EAC1BC,EAAW,cAAe,OAAO,CACrC,EAAGd,EAAoB,UAAW,WAAY,MAAM"}