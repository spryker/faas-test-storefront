{"version":3,"file":"notification-center.component.32741657.js","sources":["../../../node_modules/@spryker-oryx/ui/overlays/notification-center/src/notification-center.model.js","../../../node_modules/@spryker-oryx/ui/overlays/notification-center/src/notification-center.styles.js","../../../node_modules/@spryker-oryx/ui/overlays/notification-center/src/registry.controller.js","../../../node_modules/@spryker-oryx/ui/overlays/notification-center/src/notification-center.component.js"],"sourcesContent":["export var Positions;\n(function (Positions) {\n    Positions[\"TOP_START\"] = \"top-start\";\n    Positions[\"TOP_END\"] = \"top-end\";\n    Positions[\"BOTTOM_START\"] = \"bottom-start\";\n    Positions[\"BOTTOM_END\"] = \"bottom-end\";\n})(Positions || (Positions = {}));\n//# sourceMappingURL=notification-center.model.js.map","import { css, unsafeCSS } from 'lit';\nimport { Positions } from './notification-center.model';\nexport const notificationCenterBaseStyles = css `\n  :host {\n    display: flex;\n    flex-direction: column;\n  }\n\n  :host([position]) {\n    position: fixed;\n    z-index: var(--oryx-notification-z-index, 1001);\n    max-width: 470px;\n    width: 100%;\n  }\n\n  :host([position='${unsafeCSS(Positions.TOP_START)}']),\n  :host([position='${unsafeCSS(Positions.TOP_END)}']) {\n    flex-direction: column-reverse;\n  }\n\n  :host([position='${unsafeCSS(Positions.TOP_START)}']) {\n    top: 40px;\n    inset-inline-start: 30px;\n  }\n\n  :host([position='${unsafeCSS(Positions.TOP_END)}']) {\n    top: 40px;\n    inset-inline-end: 30px;\n  }\n\n  :host([position='${unsafeCSS(Positions.BOTTOM_START)}']) {\n    bottom: 40px;\n    inset-inline-start: 30px;\n  }\n\n  :host([position='${unsafeCSS(Positions.BOTTOM_END)}']) {\n    bottom: 40px;\n    inset-inline-end: 30px;\n  }\n\n  /* TODO: refactor with theme BP's */\n  @media (max-width: 530px) {\n    :host([position='${unsafeCSS(Positions.TOP_END)}']),\n    :host([position='${unsafeCSS(Positions.TOP_START)}']),\n    :host([position='${unsafeCSS(Positions.BOTTOM_START)}']),\n    :host([position='${unsafeCSS(Positions.BOTTOM_END)}']) {\n      max-width: calc(100% - 60px);\n    }\n  }\n\n  :host > * {\n    margin-bottom: 10px;\n    opacity: 0;\n    transition-property: opacity;\n    transition-duration: var(--oryx-transition-time-long);\n  }\n\n  :host([position='${unsafeCSS(Positions.BOTTOM_START)}']) :last-child,\n  :host([position='${unsafeCSS(Positions.BOTTOM_END)}']) :last-child {\n    margin-bottom: 0;\n  }\n\n  :host > [visible] {\n    opacity: 1;\n    transition-duration: var(--oryx-transition-time-medium);\n  }\n`;\n//# sourceMappingURL=notification-center.styles.js.map","import { defaultStrategy } from './notification-center.component';\nconst createKey = (registry) => {\n    return String(Number(registry\n        .filter(({ key }) => !!key)\n        .sort((a, b) => Number(b.key) - Number(a.key))[0]?.key || Date.now()) + 1);\n};\nexport class RegistryController {\n    constructor(host) {\n        this.host = host;\n        this._registry = [];\n        this._delayedCallbacks = {};\n        this.host.addController(this);\n    }\n    set registry(newRegistry) {\n        //need to add keys and delayed callback to the new Notification items\n        const newRegistryWithParams = newRegistry.map((item) => {\n            if (!item.key) {\n                //get last key or generate new one\n                const key = createKey(this.registry);\n                const mergedStrategy = {\n                    ...defaultStrategy,\n                    ...item,\n                };\n                //add auto-close handler\n                if (mergedStrategy.autoClose) {\n                    this._delayedCallbacks[key] = setTimeout(() => {\n                        this.toggleVisibility(key);\n                    }, mergedStrategy.autoCloseTime);\n                }\n                return {\n                    ...mergedStrategy,\n                    key,\n                    visible: false,\n                };\n            }\n            return item;\n        });\n        this._registry = newRegistryWithParams;\n        this.host.requestUpdate();\n    }\n    get registry() {\n        return this._registry;\n    }\n    preventAutoClose(targetKey) {\n        if (this.notificationIsVisible(targetKey)) {\n            clearTimeout(this._delayedCallbacks[targetKey]);\n            return;\n        }\n        this.toggleVisibility(targetKey);\n    }\n    handleNotificationClose(key) {\n        this.removeFromRegistry(key, true);\n    }\n    handleTransitionEnd(key) {\n        if (!this.notificationIsVisible(key)) {\n            this.removeFromRegistry(key);\n        }\n    }\n    removeFromRegistry(targetKey, force = false) {\n        if (force) {\n            //should clear the delayed callback\n            this.preventAutoClose(targetKey);\n        }\n        this.registry = this.registry.filter(({ key }) => targetKey !== key);\n    }\n    toggleVisibility(targetKey) {\n        this.registry = this.registry.map((item) => {\n            if (item.key === targetKey) {\n                return {\n                    ...item,\n                    visible: !item.visible,\n                    _mounted: true,\n                };\n            }\n            return item;\n        });\n    }\n    notificationIsVisible(targetKey) {\n        return Boolean(this.registry.find(({ key }) => key === targetKey)?.visible);\n    }\n    //need to set visible attr to true for new notifications to run animation\n    ensureNotificationMountedState() {\n        if (this.registry.some(({ key, _mounted }) => key && !_mounted)) {\n            setTimeout(() => {\n                this.registry = this.registry.map((strategy) => ({\n                    ...strategy,\n                    visible: true,\n                    _mounted: true,\n                }));\n            }, 0);\n        }\n    }\n    hostUpdated() {\n        this.ensureNotificationMountedState();\n    }\n}\n//# sourceMappingURL=registry.controller.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { Schemes } from '@spryker-oryx/ui/notification';\nimport { html, LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { when } from 'lit/directives/when.js';\nimport { Positions, } from './notification-center.model';\nimport { notificationCenterBaseStyles } from './notification-center.styles';\nimport { RegistryController } from './registry.controller';\nexport const defaultStrategy = {\n    scheme: Schemes.LIGHT,\n    autoClose: true,\n    autoCloseTime: 4000,\n    closable: true,\n    floating: true,\n};\nexport class NotificationCenterComponent extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.registryController = new RegistryController(this);\n    }\n    get registry() {\n        return this.registryController.registry;\n    }\n    open(strategy) {\n        this.registryController.registry = [\n            ...this.registryController.registry,\n            strategy,\n        ];\n        return this.registry[this.registry.length - 1].key;\n    }\n    close(key) {\n        this.registryController.handleNotificationClose(key);\n    }\n    renderNotification(registry) {\n        return html `\n      <oryx-notification\n        type=${ifDefined(registry.type)}\n        scheme=${ifDefined(registry.scheme)}\n        ?closable=${registry.closable}\n        ?floating=${registry.floating}\n        ?visible=${registry.visible}\n        @oryx.close=${() => this.registryController.handleNotificationClose(registry.key)}\n        @mouseenter=${() => this.registryController.preventAutoClose(registry.key)}\n        @transitionend=${() => this.registryController.handleTransitionEnd(registry.key)}\n      >\n        ${registry.content}\n        ${when(registry.subtext, () => html `<span slot=\"subtext\">${registry.subtext}</span>`)}\n      </oryx-notification>\n    `;\n    }\n    render() {\n        return html `\n      ${repeat(this.registry, ({ key }) => key, (item) => this.renderNotification(item))}\n    `;\n    }\n}\nNotificationCenterComponent.styles = [notificationCenterBaseStyles];\n__decorate([\n    property({ reflect: true }),\n    __metadata(\"design:type\", String)\n], NotificationCenterComponent.prototype, \"position\", void 0);\n__decorate([\n    state(),\n    __metadata(\"design:type\", Array),\n    __metadata(\"design:paramtypes\", [])\n], NotificationCenterComponent.prototype, \"registry\", null);\n//# sourceMappingURL=notification-center.component.js.map"],"names":["Positions","notificationCenterBaseStyles","css","unsafeCSS","createKey","registry","_a","key","a","b","RegistryController","host","newRegistry","newRegistryWithParams","item","mergedStrategy","defaultStrategy","targetKey","force","_mounted","strategy","Schemes","NotificationCenterComponent","LitElement","html","ifDefined","when","repeat","__decorate","property","__metadata","state"],"mappings":"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"}