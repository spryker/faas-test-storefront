const a=e=>{if(e&&!e.next)throw`Invalid observe value: incorrect ${e} for observe decorator, please use rxjs subjects`},l=(e,r)=>{const t=Object.getOwnPropertyDescriptor(e,r);if(!t)throw`Invalid observed property name: incorrect ${r} for observe decorator, please use already created reactive property name as an element to observe`;return t},p=(e,r,t)=>{const s=l(e,t),o=Symbol(r),c={...s,set(i){s.set?.call(this,i),this[o]&&this[o].next(i)}};Object.defineProperty(e,r,{get(){return this[o]},set(i){a(i),Object.defineProperty(this,o,{value:i,enumerable:!1,configurable:!0})},enumerable:!1,configurable:!0}),Object.defineProperty(e,t,c)},b=(e,r,t)=>({...e,initializer(){const s=e.initializer?.call(this);return a(s),s.next(this[t]),s},finisher(s){const o=s.prototype,c=l(o,t),n={...c,set(i){c.set?.call(this,i),this[r]&&this[r].next(i)}};Object.defineProperty(o,t,n)}});function d(e){return(r,t)=>{const s=(n,i)=>i!==void 0,o=s(r,t)?t:r.key,c=e??o.slice(0,-1);return s(r,t)?p(r,o,c):b(r,o,c)}}export{d as o};
